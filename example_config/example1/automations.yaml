#[]
# Perform lights conrol watchdog routine every second
- alias: 'Lights Watchdog'
  trigger:
    platform: time_pattern
    seconds: "/1" # Every second
  action:
    - service: lights_control.watchdog

# MQTT Zigbee Logger
# - alias: 'Zigbee Log'
#   trigger:
#     platform: mqtt
#     topic: zigbee2mqtt/+
#   action:
#     - service: system_log.write
#       data_template:
#         level: 'warning'
#         message: '{{ "{}".format(trigger) }}'

# MQTT Zigbee Button
- alias: 'Zigebee Buttons'
  trigger:
    platform: mqtt
    topic: zigbee2mqtt/+
  condition:
    condition: template
    value_template: {{ "/button_" in trigger.topic }}
  action:
    - service: lights_control.switch
      data_template:
        name: {{ "button." + trigger.topic.split("/")[-1][7:] }}
        value: '{{ trigger.payload_json.click }}'
    - service: system_log.write
      data_template:
        level: 'debug'
        message: '{{ "{}".format(trigger) }}'

# MQTT Zigbee Sensor
- alias: 'Zigebee Sensors'
  trigger:
    platform: mqtt
    topic: zigbee2mqtt/+
  condition:
    condition: template
    value_template: {{ "/sensor_" in trigger.topic and any(name in trigger.payload_json for name in ("occupancy", "humidity")) }}
  action:
    service: lights_control.sensor
    data_template:
      name: {{ "sensor." + trigger.topic.split("/")[-1][7:] + ["_humidity", "_occupancy"]["occupancy" in trigger.payload_json] }}
      value: {{ trigger.payload_json.get("humidity", ['off','on',"_none_"][trigger.payload_json.get("occupancy", 2))] }}

# Lights automation control
# TODO: try to create with template
- alias: 'lights_test_led'
  trigger:
    platform: time_pattern
    minutes: "/60000" # Every 1000 Hours
  action:
    - service: lights_control.watchdog

- alias: 'lights_bedroom'
  trigger:
    platform: time_pattern
    minutes: "/60001" # Every 1000 Hours
  action:
    - service: lights_control.watchdog

- alias: 'lights_guestroom'
  trigger:
    platform: time_pattern
    minutes: "/60002" # Every 1000 Hours
  action:
    - service: lights_control.watchdog

- alias: 'lights_kid1'
  trigger:
    platform: time_pattern
    minutes: "/60003" # Every 1000 Hours
  action:
    - service: lights_control.watchdog

- alias: 'lights_kid2'
  trigger:
    platform: time_pattern
    minutes: "/60004" # Every 1000 Hours
  action:
    - service: lights_control.watchdog

- alias: 'lights_corridor'
  trigger:
    platform: time_pattern
    minutes: "/60005" # Every 1000 Hours
  action:
    - service: lights_control.watchdog

- alias: 'lights_kitchen'
  trigger:
    platform: time_pattern
    minutes: "/60006" # Every 1000 Hours
  action:
    - service: lights_control.watchdog

- alias: 'lights_cabinet'
  trigger:
    platform: time_pattern
    minutes: "/60007" # Every 1000 Hours
  action:
    - service: lights_control.watchdog

- alias: 'lights_bathroom'
  trigger:
    platform: time_pattern
    minutes: "/60008" # Every 1000 Hours
  action:
    - service: lights_control.watchdog

- alias: 'lights_shower'
  trigger:
    platform: time_pattern
    minutes: "/60009" # Every 1000 Hours
  action:
    - service: lights_control.watchdog

- alias: 'lights_service'
  trigger:
    platform: time_pattern
    minutes: "/60010" # Every 1000 Hours
  action:
    - service: lights_control.watchdog

- alias: 'relays_bathroom'
  trigger:
    platform: time_pattern
    minutes: "/60011" # Every 1000 Hours
  action:
    - service: lights_control.watchdog

- alias: 'relays_shower'
  trigger:
    platform: time_pattern
    minutes: "/60011" # Every 1000 Hours
  action:
    - service: lights_control.watchdog
